// PROCESS MANAGER MODULE //

//process table
// [0.Tick, 1.PID, 2.PPID, . ,4.STATE, . . ,11.User area page number, . .14.PTBR, 15.PTLR]
alias functionNum R1;
alias PID R2;

// Free User Area Page function (function no = 2)
if (functionNum == 2) then
    multipush(R1,R2);
    R1 = 2;
    R2 = [PROCESS_TABLE + PID*16 + 11]; //process table has 16 entries
    //releasepage (userAreaPageNum) is function 2 in memory manager  module
    call MOD_2;
    multipop(R1,R2);
    return;
endif;

// Exit Process Function (function no = 3)
if (functionNum == 3) then
    multipush(R1,R2);
    R1 = 4;
    call MOD_1;
    multipop(R1,R2);
    multipush(R1,R2);
    R1 = 2;
    call MOD_1;
    multipop(R1,R2);
    [PROCESS_TABLE + PID*16 + 4] = TERMINATED;
    return;
endif;

// Free Page Table Function (function no = 4)
if (functionNum == 4) then
    PTBR = [PROCESS_TABLE + PID*16 + 14];
    PTLR = [PROCESS_TABLE + PID*16 + 15];
    // Invalidate Library entries
	[PTBR + 0] = -1;
	[PTBR + 1] = "0000";
	[PTBR + 2] = -1;
	[PTBR + 3] = "0000";
    // Release all other pages and invalidate page table entries
    alias i R3;
    i = 4;
    while(i < PTLR*2) do
        if ([PTBR + i] != -1) then
            multipush(R1,R2);
            R1 = 2;
            R2 = [PTBR + i];
            // releasepage(pg no in R2)
            call MOD_2;
            [PTBR + i] = -1;
            [PTBR + i + 1] = "0000";
            multipop(R1,R2);
        endif;
        i=i+2;
    endwhile;
    return;
endif;
